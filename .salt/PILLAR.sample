#
# This file contains default values which are used
# by the salt states deploying your project.
# you may copy them to your relevant PILLAR file
# before editing them.
# If you need to add variables, this is where to begin.
# Please keep defaults in there, but real passwords
# must be putted inside pillar
#
# replace project_name in your pillar by
# the current projectname
# you can also merge parts of this file
# with the relevant pillar
#
# think that dicts are updated/merged with default
# but lists are overidden
makina-projects.projectname:
  data:
    domain: "{fqdn}"
    server_aliases: []
    seafile_data: "{data_root}/seafile_data"
    seahub_data: "{data_root}/seahub_data"
    seafile_mysql_host: 127.0.0.1
    seafile_mysql_port: 3306
    seafile_mysql_db: seafile
    seafile_mysql_user: seafile
    seafile_mysql_pw: seafile
    ccnet_mysql_host: 127.0.0.1
    ccnet_mysql_port: 3306
    ccnet_mysql_db: ccnet
    ccnet_mysql_user: ccnet
    ccnet_mysql_pw: ccnet
    ccnet_conf:
      General:
        SERVICE_URL: "https://{domain}:443"
      Network:
        port: 10002
      Database:
        ENGINE: 'mysql'
        HOST: "{ccnet_mysql_host}"
        PORT: "{ccnet_mysql_port}"
        USER: "{ccnet_mysql_user}"
        PASSWD: "{ccnet_mysql_pw}"
        DB: "{ccnet_mysql_db}"
        CONNECTION_CHARSET: 'utf8'
    seafile_conf:
      network:
        port: 12001
      fileserver:
        port: 8082
    seafile_ini:
      database:
        type: mysql
        host: "{seafile_mysql_host}"
        port: "{seafile_mysql_port}"
        user: "{seafile_mysql_user}"
        password: "{seafile_mysql_pw}"
        db_name: "{seafile_mysql_db}"
        connection_charset: 'utf8'
    seafdav_conf:
      WEBDAV:
        enabled: "false"
        port: 8080
        fastcgi: "false"
        share_name: /
    PROJECT: seafile
    version: "4.1.1"
    force_ssl: true
    pointer: "{data_root}/current"
    app_root: "{pointer}/seahub"
    app_download_dir: "{app_root}"
    app_url_type: file
    app_url_tar_opts: "xzvf"
    app_url_archive_format: tar
    app_url_hash: "md5=de64f5f52ae4183d912d1584eac8a9b3"
    cur_ver_dir: "{data_root}/server_{version}/seafile-server-{version}"
    app_archive_test_exists: "test ! -e {cur_ver_dir}/setup-seafile.sh"
    app_url: "https://bitbucket.org/haiwen/seafile/downloads/seafile-server_{version}_{arch}.tar.gz"
    arch: "x86-64"
    htaccess: "/etc/{name}.webaccess"
    py: "{py_root}/bin/python"
    py_root: "{project_root}/venv"
    requirements: "{project_root}/requirements.txt"
    nginx_loglevel: "crit"
    nginx_upstreams: salt://makina-projects/{name}/files/nginx.upstreams.conf
    nginx_vhost: salt://makina-projects/{name}/files/nginx.content.conf
    static: "{data_root}/static"
    media: "{pointer}/seahub/media"
    media_source: "{media}"
    admins:
      {% for i in ['sysadmin'] %}
      - {{i}}:
          mail: "{{i}}+{name}@{fqdn}"
          password: {{salt['mc_utils.generate_stored_password'](
                             'corpus-django_web_admin'+i)}}
      {%endfor %}
    DJANGO_SETTINGS_MODULE: "seahub.dsm"
    SEAFILE_DJANGO_SETTINGS_MODULE: "seahub.settings"
    compile_messages: false
    django_settings:
      # order is important
      FILE_SERVER_ROOT: "https://{domain}/seafhttp"
      SITE_BASE: 'https://{domain}'
      SITE_NAME: 'Seafile'
      ADMINS: "placeholder (totally computed)"
      SITE_ID: 1
      DATABASES:
        default:
          ENGINE: 'django.db.backends.mysql'
          USER: '{name}'
          PORT: 3306
          HOST: '127.0.0.1'
          NAME: 'seahub'
          PASSWORD: '{name}secret'
          OPTIONS:
            init_command: 'SET storage_engine=INNODB'
      DEFAULT_FROM_EMAIL: '{adminmail}'
      SERVER_EMAIL: 'root@{fqdn}'
      MEDIA_ROOT: '{media}'
      STATIC_ROOT: '{static}'
      LANGUAGE_CODE: fr-fr
      DATE_FORMAT: 'iso-8601'
      ALLOWED_HOSTS:
        - localhost
        - 127.0.0.1
        - "{domain}"
        - "{fqdn}"
        - "10.5.0.1"
      CORS_ORIGIN_ALLOW_ALL: True
      # Internationalization
      # https://docs.djangoproject.com/en/1.6/topics/i18n/
      TIME_ZONE: 'Europe/Paris'
      DEBUG: False
      TEMPLATE_DEBUG: False
      USE_X_FORWARDED_HOST: True
      CACHES:
        default:
          BACKEND: 'django.core.cache.backends.memcached.MemcachedCache'
          LOCATION: '127.0.0.1:11211'
      USER_MODULE: django.contrib.auth.models
      USER_CLASS: User
      SECRET_KEY: "{{salt['mc_utils.generate_stored_password'](
                             'corpus-django_web_secret_key', 64)}}"
      LOGGING:
        version: 1
        disable_existing_loggers: False
        filters:
          require_debug_false:
            '()': django.utils.log.RequireDebugFalse
        handlers:
          mail_admins:
            level: 'ERROR'
            class: django.utils.log.AdminEmailHandler
          console:
            level: 'DEBUG'
            class: 'logging.StreamHandler'
        loggers:
          '':
            handlers: ['console']
            level: 'DEBUG'
            propagate: False
          django.request:
             handlers: ['console', 'mail_admins']
             level: 'ERROR'
             propagate: True
          django:
             handlers: ['console', 'mail_admins']
             level: 'ERROR'
             propagate: True
      LANGUAGES:
       - "('fr', _('French'))"
       - "('en', _('English'))"
       - "('it', _('Italia'))"
      #ADDITIONAL_TEMPLATE_DIRS:
      #  - '{project_root}/calanques'
      # add custom extra_settings which will be processed at end only
      #extra_django_settings:
      #  FOO: bar
      #  BAR: true
      # settings rendered as is (not via the macro
      #extra_settings:
      #  FOO: "'bar'"
      #  BAR: "True"
# vim:set ft=sls:
